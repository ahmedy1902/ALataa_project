@model IEnumerable<dynamic>
@{
    ViewData["Title"] = "Donation History";
    var userTypes = ViewBag.UserTypes as List<string> ?? new List<string>();
    var fields = ViewBag.Fields as List<string> ?? new List<string>();
    var accounts = ViewBag.Accounts as IEnumerable<dynamic> ?? new List<dynamic>();
    // Õ”«» „Ã„Ê⁄ «· »—⁄« 
    decimal total = 0;
    if (Model != null)
    {
        foreach (var d in Model)
        {
            if (d.donation_amount != null)
            {
                decimal amount;
                if (decimal.TryParse(d.donation_amount.ToString(), out amount))
                    total += amount;
            }
        }
    }
}

<h2 class="mb-4">Donation History</h2>
<form method="get" class="row g-3 mb-3">
    <div class="col-md-3">
        <label>User Type</label>
        <select name="userType" class="form-control">
            <option value="">All</option>
            @foreach (var t in userTypes) { <option value="@t">@t</option> }
        </select>
    </div>
    <div class="col-md-3">
        <label>Help Field</label>
        <select name="field" class="form-control">
            <option value="">All</option>
            @foreach (var f in fields) { <option value="@f">@f</option> }
        </select>
    </div>
    <div class="col-md-3">
        <label>From Date</label>
        <input type="date" name="from" class="form-control" />
    </div>
    <div class="col-md-3">
        <label>To Date</label>
        <input type="date" name="to" class="form-control" />
    </div>
    <div class="col-12 d-flex gap-2">
        <button type="submit" class="btn btn-primary">Filter</button>
        <a href="/Donate" class="btn btn-secondary">Donate page</a>
    </div>
</form>

<table class="table table-bordered table-striped" id="donationHistoryTable">
    <thead>
        <tr>
            <th>Date</th>
            <th>Beneficiary Name</th>
            <th>User Type</th>
            <th>Help Field</th>
            <th>Donation Amount</th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null)
        {
            foreach (var d in Model)
            {
                string dateStr = "-";
                if (d.donation_date != null)
                {
                    if (d.donation_date is DateTime)
                    {
                        dateStr = ((DateTime)d.donation_date).ToString("yyyy-MM-dd HH:mm");
                    }
                    else
                    {
                        var msObj = d.donation_date;
                        long ms = 0;
                        if (msObj is long)
                            ms = (long)msObj;
                        else if (msObj is int)
                            ms = (int)msObj;
                        else
                            long.TryParse(msObj.ToString(), out ms);
                        if (ms > 0)
                            dateStr = DateTimeOffset.FromUnixTimeMilliseconds(ms).ToLocalTime().ToString("yyyy-MM-dd HH:mm");
                    }
                }
                var userType = accounts.FirstOrDefault(x => x.email == d.recipient_email)?.userType ?? "-";
                var helpField = accounts.FirstOrDefault(x => x.email == d.recipient_email)?.HelpFields ?? d.donation_field ?? "-";
                <tr data-usertype="@userType" data-helpfield="@helpField">
                    <td>@dateStr</td>
                    <td>@(d.recipient_email ?? "-")</td>
                    <td>@userType</td>
                    <td>@helpField</td>
                    <td>@(d.donation_amount ?? "-")</td>
                </tr>
            }
        }
    </tbody>
</table>
<div class="mt-3">
    <strong>Total:</strong> <span id="totalAmount">@total</span>
</div>

@section Scripts {
    <script>
        // ›· —… «·ÃœÊ· Õ”» «·›·« —
        $(function () {
            function filterTable() {
                var selectedUserType = $("select[name='userType']").val().toLowerCase();
                var selectedField = $("select[name='field']").val().toLowerCase();
                var fromDate = $("input[name='from']").val();
                var toDate = $("input[name='to']").val();
                $("#donationHistoryTable tbody tr").each(function () {
                    var row = $(this);
                    var userType = (row.data("usertype") || "").toLowerCase();
                    var helpField = (row.data("helpfield") || "").toLowerCase();
                    var dateText = row.find("td").eq(0).text();
                    var show = true;
                    if (selectedUserType && userType !== selectedUserType) show = false;
                    if (selectedField && helpField !== selectedField) show = false;
                    if (fromDate && dateText !== "-") {
                        var rowDate = new Date(dateText);
                        var from = new Date(fromDate);
                        if (rowDate < from) show = false;
                    }
                    if (toDate && dateText !== "-") {
                        var rowDate = new Date(dateText);
                        var to = new Date(toDate);
                        to.setDate(to.getDate() + 1); // include the day
                        if (rowDate >= to) show = false;
                    }
                    row.toggle(show);
                });
            }
            $("select[name='userType'], select[name='field'], input[name='from'], input[name='to']").on('change', filterTable);
        });
    </script>
    <script>
        $("#submitAllBtn").on("click", function () {
            if (donations.length === 0) return;
            // AJAX submit
            const data = donations.map(d => ({
                BeneficiaryId: d.id, // ÌÃ» √‰ ÌﬂÊ‰ «”„ «·Õﬁ· „ÿ«»ﬁ« ·„« ›Ì C#
                Amount: d.amount
            }));
            $.ajax({
                url: '/Donate/SubmitDonations',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(data),
                success: function (res) {
                    if (res.success) {
                        alert('Donations have been successfully recorded!');
                        location.reload();
                    } else {
                        alert('An error occurred while saving!');
                    }
                },
                error: function () {
                    alert('An error occurred while saving!');
                }
            });
        });
    </script>
}
